Dynamic linking junk (for the most part).  This should be a no-op
unless TE_PE_DYN is turned on.

	* config/tc-i386.c (md_apply_fix3): Add tests for dynamic linking,
	for PE, more relocation types need special cases.

diff -drupP --exclude-from=//M/donn/diffs/exclude.files gas.orig/config/tc-i386.c gas/config/tc-i386.c
--- gas.orig/config/tc-i386.c	Fri Aug 20 14:00:41 1999
+++ gas/config/tc-i386.c	Fri Aug 20 14:01:23 1999
@@ -4732,19 +4740,45 @@ md_apply_fix3 (fixP, valP, seg)
 
   /* Fix a few things - the dynamic linker expects certain values here,
      and we must not dissappoint it.  */
+#if defined (OBJ_ELF) || defined (OBJ_MAYBE_ELF) || defined (TE_PE_DYN) /* [ */
+  if (fixP->fx_addsy
 #if defined (OBJ_ELF) || defined (OBJ_MAYBE_ELF)
-  if (OUTPUT_FLAVOR == bfd_target_elf_flavour
-      && fixP->fx_addsy)
+      && OUTPUT_FLAVOR == bfd_target_elf_flavour
+#endif
+  )
     switch (fixP->fx_r_type)
       {
       case BFD_RELOC_386_PLT32:
       case BFD_RELOC_X86_64_PLT32:
+#ifdef TE_PE_DYN
+        /* On PE, to get the right value in the .o file, we need to fake out 
+	   _bfd_install_relocaction, see above.  */
+        value += fixP->fx_where + fixP->fx_frag->fr_address;
+#else
 	/* Make the jump instruction point to the address of the operand.  At
 	   runtime we merely add the offset to the actual PLT entry.  */
 	value = -4;
+#endif
 	break;
+
+#ifdef TE_PE_DYN
+    case BFD_RELOC_32:
+      /* On PE, to get the right value in the .o file, we need to fake out 
+	 _bfd_install_relocaction, see above.
+	 In this case, we're looking to see if this might be transformed
+	 into a GOTPC, later*/
+      if (GOT_symbol == NULL || fixP->fx_addsy != GOT_symbol)
+	  break;
+      /* drop thru */
+#endif
+
       case BFD_RELOC_386_GOTPC:
-
+#ifdef TE_PE_DYN
+      /* On PE, to get the right value in the .o file, we need to fake out
+	 _bfd_install_relocaction, see above.  */
+      value += fixP->fx_where + fixP->fx_frag->fr_address;
+#else
+
 /*   This is tough to explain.  We end up with this one if we have
  * operands that look like "_GLOBAL_OFFSET_TABLE_+[.-.L284]".  The goal
  * here is to obtain the absolute address of the GOT, and it is strongly
@@ -4784,7 +4818,9 @@ md_apply_fix3 (fixP, valP, seg)
  * way.  */
 
 	value -= 1;
+#endif
 	break;
+
       case BFD_RELOC_386_GOT32:
       case BFD_RELOC_386_TLS_GD:
       case BFD_RELOC_386_TLS_LDM:
@@ -4795,6 +4831,7 @@ md_apply_fix3 (fixP, valP, seg)
       case BFD_RELOC_X86_64_GOT32:
 	value = 0; /* Fully resolved at runtime.  No addend.  */
 	break;
+
       case BFD_RELOC_386_GOTOFF:
       case BFD_RELOC_X86_64_GOTPCREL:
 	break;
@@ -4807,7 +4844,7 @@ md_apply_fix3 (fixP, valP, seg)
       default:
 	break;
       }
-#endif /* defined (OBJ_ELF) || defined (OBJ_MAYBE_ELF)  */
+#endif /* defined (OBJ_ELF) || defined (OBJ_MAYBE_ELF) ] */
   * valP = value;
 #endif /* defined (BFD_ASSEMBLER) && !defined (TE_Mach)  */
 
