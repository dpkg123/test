If a system #defines sigsetjmp (or...) in terms of setjmp (which in
turn is #defined), the sequence in posixjmp.h breaks because it 
undef's the system's setjmp.

Someone else had put in an __OPENNT fix that just plain stinks.

DO NOT SUBMIT YET.  It may be that we will want to fix our headers and
not expose this one.

Index: src/readline/posixjmp.h
===================================================================
RCS file: /dev/fs/H/rupp/devel-local-repository/src/readline/posixjmp.h,v
retrieving revision 1.1.1.1
diff -p -u -r1.1.1.1 posixjmp.h
--- src/readline/posixjmp.h	2001/12/23 00:35:43	1.1.1.1
+++ src/readline/posixjmp.h	2001/12/24 04:37:16
@@ -27,12 +27,8 @@
 
 #if defined (HAVE_POSIX_SIGSETJMP)
 #  define procenv_t	sigjmp_buf
-#  if !defined (__OPENNT)
-#    undef setjmp
-#    define setjmp(x)	sigsetjmp((x), 1)
-#    undef longjmp
-#    define longjmp(x, n)	siglongjmp((x), (n))
-#  endif /* !__OPENNT */
+#  define SETJMP(x)	sigsetjmp((x), 1)
+#  define LONGJMP(x, n)	siglongjmp((x), (n))
 #else
 #  define procenv_t	jmp_buf
 #endif
Index: src/readline/readline.c
===================================================================
RCS file: /dev/fs/H/rupp/devel-local-repository/src/readline/readline.c,v
retrieving revision 1.1.1.1
diff -p -u -r1.1.1.1 readline.c
--- src/readline/readline.c	2001/12/23 00:35:43	1.1.1.1
+++ src/readline/readline.c	2001/12/24 04:37:16
@@ -372,7 +372,7 @@ readline_internal_charloop ()
 #endif
       lk = _rl_last_command_was_kill;
 
-      code = setjmp (readline_top_level);
+      code = SETJMP (readline_top_level);
 
       if (code)
 	(*rl_redisplay_function) ();
Index: src/readline/util.c
===================================================================
RCS file: /dev/fs/H/rupp/devel-local-repository/src/readline/util.c,v
retrieving revision 1.1.1.1
diff -p -u -r1.1.1.1 util.c
--- src/readline/util.c	2001/12/23 00:35:44	1.1.1.1
+++ src/readline/util.c	2001/12/24 04:37:16
@@ -94,7 +94,7 @@ _rl_abort_internal ()
     _rl_pop_executing_macro ();
 
   rl_last_func = (Function *)NULL;
-  longjmp (readline_top_level, 1);
+  LONGJMP (readline_top_level, 1);
   return (0);
 }
 
