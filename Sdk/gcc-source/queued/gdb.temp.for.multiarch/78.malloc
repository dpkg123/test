On some systems, malloc is a weak symbol, and if the application
doesn't actually call something that uses malloc by that name, the
call-from-keyboard stuff will fail.  However, if we inform gdb of
the strong (and hidden) name of malloc (that usually will be present)
we increase the odds of call from keyboard "just working".

ChangeLog
	* defs.h (NAME_OF_MALLOC): define a default.
	* valops.c (value_allocate_space_in_inferior): use it.
	* tm-i386interix.h (NAME_OF_MALLOC): define specific value.
	

Index: src/gdb/defs.h
===================================================================
RCS file: /dev/fs/H/rupp/devel-local-repository/src/gdb/defs.h,v
retrieving revision 1.3
diff -p -u -r1.3 defs.h
--- src/gdb/defs.h	2001/12/24 02:09:51	1.3
+++ src/gdb/defs.h	2001/12/24 02:44:33
@@ -987,6 +987,10 @@ typedef struct ptid ptid_t;
 
 #define CONST_PTR const
 
+#ifndef NAME_OF_MALLOC
+#define NAME_OF_MALLOC "malloc"
+#endif
+
 /* Defaults for system-wide constants (if not defined by xm.h, we fake it).
    FIXME: Assumes 2's complement arithmetic */
 
Index: src/gdb/valops.c
===================================================================
RCS file: /dev/fs/H/rupp/devel-local-repository/src/gdb/valops.c,v
retrieving revision 1.4
diff -p -u -r1.4 valops.c
--- src/gdb/valops.c	2001/12/24 02:12:19	1.4
+++ src/gdb/valops.c	2001/12/24 02:44:34
@@ -136,7 +136,7 @@ struct value *
 value_allocate_space_in_inferior (int len)
 {
   struct value *blocklen;
-  struct value *val = find_function_in_inferior ("malloc");
+  struct value *val = find_function_in_inferior (NAME_OF_MALLOC);
 
   blocklen = value_from_longest (builtin_type_int, (LONGEST) len);
   val = call_function_by_hand (val, 1, &blocklen);
Index: src/gdb/config/i386/tm-i386interix.h
===================================================================
RCS file: /dev/fs/H/rupp/devel-local-repository/src/gdb/config/i386/tm-i386interix.h,v
retrieving revision 1.1
diff -p -u -r1.1 tm-i386interix.h
--- src/gdb/config/i386/tm-i386interix.h	2001/12/23 20:46:23	1.1
+++ src/gdb/config/i386/tm-i386interix.h	2001/12/24 02:44:34
@@ -116,4 +116,6 @@ get_longjmp_target PARAMS ((CORE_ADDR *)
 
 #define GET_LONGJMP_TARGET(ADDR) get_longjmp_target(ADDR)
 
+#define NAME_OF_MALLOC "_malloc"
+
 #endif /* TM_INTERIX_H */
