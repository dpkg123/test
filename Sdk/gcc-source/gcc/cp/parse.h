typedef union { GTY(())
  long itype;
  tree ttype;
  char *strtype;
  enum tree_code code;
  flagged_type_tree ftype;
  struct unparsed_text *pi;
} YYSTYPE;
#define	IDENTIFIER	258
#define	tTYPENAME	259
#define	SELFNAME	260
#define	PFUNCNAME	261
#define	SCSPEC	262
#define	TYPESPEC	263
#define	CV_QUALIFIER	264
#define	CONSTANT	265
#define	VAR_FUNC_NAME	266
#define	STRING	267
#define	ELLIPSIS	268
#define	SIZEOF	269
#define	ENUM	270
#define	IF	271
#define	ELSE	272
#define	WHILE	273
#define	DO	274
#define	FOR	275
#define	SWITCH	276
#define	CASE	277
#define	DEFAULT	278
#define	BREAK	279
#define	CONTINUE	280
#define	RETURN_KEYWORD	281
#define	GOTO	282
#define	ASM_KEYWORD	283
#define	TYPEOF	284
#define	ALIGNOF	285
#define	SIGOF	286
#define	ATTRIBUTE	287
#define	EXTENSION	288
#define	LABEL	289
#define	REALPART	290
#define	IMAGPART	291
#define	VA_ARG	292
#define	AGGR	293
#define	VISSPEC	294
#define	DELETE	295
#define	NEW	296
#define	THIS	297
#define	OPERATOR	298
#define	CXX_TRUE	299
#define	CXX_FALSE	300
#define	NAMESPACE	301
#define	TYPENAME_KEYWORD	302
#define	USING	303
#define	LEFT_RIGHT	304
#define	TEMPLATE	305
#define	TYPEID	306
#define	DYNAMIC_CAST	307
#define	STATIC_CAST	308
#define	REINTERPRET_CAST	309
#define	CONST_CAST	310
#define	SCOPE	311
#define	EXPORT	312
#define	EMPTY	313
#define	PTYPENAME	314
#define	NSNAME	315
#define	THROW	316
#define	ASSIGN	317
#define	OROR	318
#define	ANDAND	319
#define	MIN_MAX	320
#define	EQCOMPARE	321
#define	ARITHCOMPARE	322
#define	LSHIFT	323
#define	RSHIFT	324
#define	POINTSAT_STAR	325
#define	DOT_STAR	326
#define	UNARY	327
#define	PLUSPLUS	328
#define	MINUSMINUS	329
#define	HYPERUNARY	330
#define	POINTSAT	331
#define	TRY	332
#define	CATCH	333
#define	EXTERN_LANG_STRING	334
#define	ALL	335
#define	PRE_PARSED_CLASS_DECL	336
#define	DEFARG	337
#define	DEFARG_MARKER	338
#define	PRE_PARSED_FUNCTION_DECL	339
#define	TYPENAME_DEFN	340
#define	IDENTIFIER_DEFN	341
#define	PTYPENAME_DEFN	342
#define	END_OF_LINE	343
#define	END_OF_SAVED_INPUT	344


extern YYSTYPE yylval;
#define YYEMPTY		-2
