The .bf, .ef, and .lf operators are somewhat different from each other,
and need to be handled (more) separately.  Change the test to be more 
thorough, and do slightly different things.

This is a potential Gnu PE vs. MS PE problem (not the parsing, but the
stuff controlled by TE_PE, and reporting of listing line numbers.)
Is this used by cygwin?  (DJ, Mumit?)  (The TE_PE could be __INTERIX
until we get that all worked out.)

	* config/obj-coff.c (obj_coff_endef): more thorough 
	parsing of .bf,.ef,.lf.

	* config/obj-coff.c (obj_coff_line): .ef, .lf not same as .bf;
	report line number properly when listing.

diff -drupP --exclude-from=//M/donn/diffs/exclude.files gas.orig/config/obj-coff.c gas/config/obj-coff.c
--- gas.orig/config/obj-coff.c	Fri Aug 20 14:00:39 1999
+++ gas/config/obj-coff.c	Fri Aug 20 14:18:35 1999
@@ -587,15 +660,31 @@ obj_coff_endef (ignore)
 	S_SET_SEGMENT (def_symbol_in_progress, text_section);
 
 	name = S_GET_NAME (def_symbol_in_progress);
-	if (name[1] == 'b' && name[2] == 'f')
-	  {
+	if (name[0] == '.' && name[2] == 'f' && name[3] == '\0')
+  	  {
+	  switch (name[1])
+	    {
+	  case 'b':  
+	    /* .bf */
 	    if (! in_function ())
 	      as_warn (_("`%s' symbol without preceding function"), name);
 /*	    SA_SET_SYM_LNNO (def_symbol_in_progress, 12345);*/
 	    /* Will need relocating */
 	    SF_SET_PROCESS (def_symbol_in_progress);
 	    clear_function ();
-	  }
+	    break;
+#ifdef TE_PE
+	  case 'e':  
+	    /* .ef */
+	    /* The MS compilers output the actual endline, not the function-
+	       relative one... we want to match without changing
+	       the assembler input */
+	       SA_SET_SYM_LNNO (def_symbol_in_progress, 
+	       SA_GET_SYM_LNNO(def_symbol_in_progress) + coff_line_base);
+	    break;
+#endif
+	    }
+	 }
       }
       break;
 
@@ -784,7 +886,7 @@ obj_coff_line (ignore)
     coff_line_base = this_base;
 
   S_SET_NUMBER_AUXILIARY (def_symbol_in_progress, 1);
-  SA_SET_SYM_LNNO (def_symbol_in_progress, coff_line_base);
+  SA_SET_SYM_LNNO (def_symbol_in_progress, this_base);
 
   demand_empty_rest_of_line ();
 
@@ -794,7 +896,7 @@ obj_coff_line (ignore)
       extern int listing;
 
       if (listing)
-	listing_source_line ((unsigned int) coff_line_base);
+	listing_source_line ((unsigned int) this_base);
     }
 #endif
 }
