Add obj_coff_loc() (the Alpha uses .loc).  (There's more coming with
the Alpha, but this was convienient to put here.)

	* obj-coff.c (obj_coff_loc): new function.
	* obj-coff.c (obj_pseudo_table): Use.

diff -drupP --exclude-from=//M/donn/diffs/exclude.files gas.orig/config/obj-coff.c gas/config/obj-coff.c
--- gas.orig/config/obj-coff.c	Fri Aug 20 14:00:39 1999
+++ gas/config/obj-coff.c	Fri Aug 20 14:18:35 1999
@@ -480,6 +489,68 @@ obj_coff_ln (appline)
   demand_empty_rest_of_line ();
 }
 
+/* .loc is essentially the same as .ln; parse it for assembler
+   compatibility */
+
+static void obj_coff_loc PARAMS((int));
+void
+obj_coff_loc (ignore)
+     int ignore;
+{
+  int lineno;
+
+  if (now_seg != text_section)
+    {
+      as_warn (_(".loc outside of .text"));
+      demand_empty_rest_of_line ();
+      return;
+    }
+
+  if (def_symbol_in_progress != NULL)
+    {
+      as_warn (_(".loc pseudo-op inside .def/.endef: ignored."));
+      demand_empty_rest_of_line ();
+      return;
+    }
+
+  /* Skip the file number.  */
+  SKIP_WHITESPACE ();
+  get_absolute_expression ();
+  SKIP_WHITESPACE ();
+
+  lineno = get_absolute_expression ();
+
+#ifndef NO_LISTING
+  {
+    extern int listing;
+
+    if (listing)
+      {
+        lineno += coff_line_base - 1;
+	listing_source_line (lineno);
+      }
+  }
+#endif
+
+#if 0
+  /* If we're building stabs, then output a special label rather than
+     COFF line number info.  */
+  if (stabs_seen)
+    {
+      (void) add_ecoff_symbol ((char *) NULL, st_Label, sc_Text,
+			       symbol_new ("L0\001", now_seg,
+					   (valueT) frag_now_fix (),
+					   frag_now),
+			       (bfd_vma) 0, 0, lineno);
+      return;
+    }
+#endif
+  demand_empty_rest_of_line ();  /* this seems reasonable, but... */
+
+  add_lineno (frag_now, frag_now_fix (), lineno);
+
+}
+
 /*
  *			def()
  *
@@ -4394,6 +4547,9 @@ const pseudo_typeS obj_pseudo_table[] =
   {"endef", obj_coff_endef, 0},
   {"line", obj_coff_line, 0},
   {"ln", obj_coff_ln, 0},
+#if defined(OBJ_COFF) && defined(BFD_ASSEMBLER)
+  {"loc", obj_coff_loc, 0},
+#endif
   {"appline", obj_coff_ln, 1},
   {"scl", obj_coff_scl, 0},
   {"size", obj_coff_size, 0},
