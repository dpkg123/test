We let ld itself handle constructors, but to do so it needs to be able
to put them in .ctors (or destructors in .dtors).  (That is, we don't
set up to use, or rely upon, collect2 when using g++.)

--- gcc/config/i386/i386-interix.h.orig	Wed Feb 13 18:54:54 2002
+++ gcc/config/i386/i386-interix.h	Thu Feb 14 14:46:17 2002
@@ -250,7 +251,9 @@ Boston, MA 02111-1307, USA.  */
 #define USE_CONST_SECTION	1
 
 #define CONST_SECTION_ASM_OP	"\t.section\t.rdata,\"r\""
-
+#define INIT_SECTION_ASM_OP	"\t.section\t.init,\"x\""
+#define FINI_SECTION_ASM_OP	"\t.section\t.fini,\"x\""
+
 /* A default list of other sections which we might be "in" at any given
    time.  For targets that use additional sections (e.g. .tdesc) you
    should override this definition in the target-specific file which
@@ -415,10 +434,10 @@ extern void i386_pe_unique_section ();
 #define UNIQUE_SECTION(DECL,RELOC) i386_pe_unique_section (DECL, RELOC)
 
 #define SUPPORTS_ONE_ONLY 1
-
+#endif /* 0 */
+
 /* Switch into a generic section.  */
 #define TARGET_ASM_NAMED_SECTION  default_pe_asm_named_section
-#endif /* 0 */
 
 /* DWARF2 Unwinding doesn't work with exception handling yet.  */
 #define DWARF2_UNWIND_INFO 0
diff
--- gcc/config/interix.h.orig	Wed Feb 13 18:54:54 2002
+++ gcc/config/interix.h	Thu Feb 14 14:46:17 2002
@@ -60,7 +60,9 @@ for windows/multi thread */
 
 #undef STARTFILE_SPEC
 #define STARTFILE_SPEC  \
-  "%{!shared:%{pg:gcrt0%O%s}%{!pg:%{p:mcrt0%O%s}%{!p:crt0%O%s}}} %{shared:crti%O%s}"
+  "%{!shared:%{pg:gcrt0%O%s}%{!pg:%{p:mcrt0%O%s}%{!p:crt0%O%s}}} %{shared:crti%O%s} crtbegin.o%s"
+
+#define ENDFILE_SPEC "crtend.o%s"
 
 #undef WORD_SWITCH_TAKES_ARG
 #define WORD_SWITCH_TAKES_ARG(STR)					\
diff
--- gcc/config/i386/t-interix	Wed Feb 13 18:54:54 2002
+++ gcc/config/i386/t-interix	Thu Feb 14 14:46:17 2002
@@ -4,5 +4,6 @@ LIB1ASMFUNCS = _chkstk
 interix.o: $(srcdir)/config/i386/interix.c
 	$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/i386/interix.c
 
 # System headers will track gcc's needs.
 USER_H=
+EXTRA_PARTS=crtbegin.o crtend.o
