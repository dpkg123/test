Sent him quotes.

The SUS (X/Open) says that -f means "full output", not "format";
For Interix only (only to avoid perturbing existing installations): 
have -f conform, rename old -f (--format) to -F.   Add --full/-f.
(Their definition of "internal symbols" is nearly useless.)

Ian: I'd be perfectly happy for the __INTERIX stuff to be default.
I did that for everyone else's benefit, not mine.

	* nm.c (full_output): new var.
	(long_options): add --full; rename -f -> -F; Interix only.
	(usage): new message.
	(main): set full_output.
	(filter_symbols): use full_output; add leading_char for _ filtering.

diff -drupP --exclude-from=//M/donn/bin/exclude.files binutils.nil/nm.c binutils/nm.c
--- binutils.nil/nm.c	Wed Jul  7 16:58:52 1999
+++ binutils/nm.c	Wed Jul  7 16:59:21 1999
@@ -175,7 +175,10 @@ static int dynamic = 0;		/* Print dynami
 static int show_version = 0;	/* Show the version number.  */
 static int show_stats = 0;	/* Show statistics.  */
 static int line_numbers = 0;	/* Print line numbers for symbols.  */
-
+#ifdef __INTERIX /* for SUS conformance */
+static int full_output = 0;    /* don't suppress internal symbols */
+#endif /* __INTERIX */
+
 /* When to print the names of files.  Not mutually exclusive in SYSV format.  */
 static int filename_per_file = 0;	/* Once per file, on its own line.  */
 static int filename_per_symbol = 0;	/* Once per symbol, at start of line.  */
@@ -214,7 +217,12 @@ static struct option long_options[] =
   {"demangle", optional_argument, 0, 'C'},
   {"dynamic", no_argument, &dynamic, 1},
   {"extern-only", no_argument, &external_only, 1},
+#ifdef __INTERIX /* for SUS conformance */
+  {"full", no_argument, 0, 'f'},
+  {"format", required_argument, 0, 'F'},
+#else
   {"format", required_argument, 0, 'f'},
+#endif /* __INTERIX */
   {"help", no_argument, 0, 'h'},
   {"line-numbers", no_argument, 0, 'l'},
   {"no-cplus", no_argument, &do_demangle, 0},  /* Linux compatibility.  */
@@ -245,6 +253,7 @@ usage (stream, status)
 {
   fprintf (stream, _("Usage: %s [option(s)] [file(s)]\n"), program_name);
   fprintf (stream, _(" List symbols in [file(s)] (a.out by default).\n"));
+#ifndef INTERIX
   fprintf (stream, _(" The options are:\n\
   -a, --debug-syms       Display debugger-only symbols\n\
   -A, --print-file-name  Print name of the input file before every symbol\n\
@@ -276,6 +285,39 @@ usage (stream, status)
   -h, --help             Display this information\n\
   -V, --version          Display this program's version number\n\
 \n"));
+#else
+  fprintf (stream, _(" The options are:\n\
+  -a, --debug-syms       Display debugger-only symbols\n\
+  -A, --print-file-name  Print name of the input file before every symbol\n\
+  -B                     Same as --format=bsd\n\
+  -C, --demangle[=STYLE] Decode low-level symbol names into user-level names\n\
+                          The STYLE, if specified, can be `auto' (the default),\n\
+                          `gnu', 'lucid', 'arm', 'hp', 'edg' or 'gnu-new-abi'\n\
+      --no-demangle      Do not demangle low-level symbol names\n\
+  -D, --dynamic          Display dynamic symbols instead of normal symbols\n\
+      --defined-only     Display only defined symbols\n\
+  -e                     (ignored)\n\
+  -f                     Full Output\n\
+  -F, --format=FORMAT    Use the output format FORMAT.  FORMAT can be `bsd',\n\
+                           `sysv' or `posix'.  The default is `bsd'\n\
+  -g, --extern-only      Display only external symbols\n\
+  -l, --line-numbers     Use debugging information to find a filename and\n\
+                           line number for each symbol\n\
+  -n, --numeric-sort     Sort symbols numerically by address\n\
+  -o                     Same as -A\n\
+  -p, --no-sort          Do not sort the symbols\n\
+  -P, --portability      Same as --format=posix\n\
+  -r, --reverse-sort     Reverse the sense of the sort\n\
+  -s, --print-armap      Include index for symbols from archive members\n\
+      --size-sort        Sort symbols by size\n\
+  -t, --radix=RADIX      Use RADIX for printing symbol values\n\
+      --target=BFDNAME   Specify the target object format as BFDNAME\n\
+  -u, --undefined-only   Display only undefined symbols\n\
+  -X 32_64               (ignored)\n\
+  -h, --help             Display this information\n\
+  -V, --version          Display this program's version number\n\
+\n"));
+#endif
   list_supported_targets (program_name, stream);
   if (status == 0)
     fprintf (stream, _("Report bugs to %s.\n"), REPORT_BUGS_TO);
@@ -369,8 +411,13 @@ main (argc, argv)
   bfd_init ();
   set_default_bfd_target ();
 
+#ifndef __INTERIX  /* Conform to SUS */
+  while ((c = getopt_long (argc, argv, "aABCDef:gHlnopPrSst:uvVvX:",
+			   long_options, (int *) 0)) != EOF)
+#else
   while ((c = getopt_long (argc, argv, "aABCDef:gHhlnopPrSst:uvVvX:",
 			   long_options, (int *) 0)) != EOF)
+#endif
     {
       switch (c)
 	{
@@ -404,9 +451,18 @@ main (argc, argv)
 	case 'e':
 	  /* Ignored for HP/UX compatibility.  */
 	  break;
+#ifdef __INTERIX /* for SUS compatability */
+	case 'F':
+	  set_output_format (optarg);
+	  break;
+	case 'f':
+          full_output = 1;
+	  break;
+#else /* __INTERIX */
 	case 'f':
 	  set_output_format (optarg);
 	  break;
+#endif /* __INTERIX */
 	case 'g':
 	  external_only = 1;
 	  break;
@@ -1017,7 +1073,10 @@ filter_symbols (abfd, dynamic, minisyms,
 {
   bfd_byte *from, *fromend, *to;
   asymbol *store;
-
+  char leading_char;
+
+  leading_char = bfd_get_symbol_leading_char (abfd);
+
   store = bfd_make_empty_symbol (abfd);
   if (store == NULL)
     bfd_fatal (bfd_get_filename (abfd));
@@ -1037,7 +1096,17 @@ filter_symbols (abfd, dynamic, minisyms,
       if (sym == NULL)
 	bfd_fatal (bfd_get_filename (abfd));
 
+/* The SUS definition of -f is so vague as to not be useful.  If/when
+   we find a clear definition, this is the place to implement it.  
+   The disabled code below suppresses "internal" symbols if the object
+   language uses _ prefixes for hidden symbols. */
+#if 0 /* for SUS conformance */
+      if (full_output)
+	keep = 1;
+      else if (undefined_only)
+#else
       if (undefined_only)
+#endif
 	keep = bfd_is_und_section (sym->section);
       else if (external_only)
 	keep = ((sym->flags & BSF_GLOBAL) != 0
@@ -1045,7 +1114,20 @@ filter_symbols (abfd, dynamic, minisyms,
 		|| bfd_is_und_section (sym->section)
 		|| bfd_is_com_section (sym->section));
       else
+#if 0 /* for SUS conformance */
+        /* not full output or one of the special cases...
+	   if we have a leading character, keep symbols which begin
+	       with it (they're user symbols).
+	   if we don't, just keep them all (based on what the alpha
+	       does).  (Exactly what the discard criteria
+	       should be is unclear, but this is close; bfd needs
+	       a way to tell us) */
+        keep = (leading_char != 0 
+		  ? sym->name[0] == leading_char
+		  : 1);
+#else
 	keep = 1;
+#endif
 
       if (keep
 	  && ! print_debug_syms
