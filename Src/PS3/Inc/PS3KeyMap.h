/*=============================================================================
	PS3KeyMap.h: Unreal PS3 key mappings.
	Copyright 1998-2011 Epic Games, Inc. All Rights Reserved.
=============================================================================*/

#ifndef __PS3KEYMAP_H__
#define __PS3KEYMAP_H__

#define MAP_KEY(X, Y) KeyMapVirtualToName.Set(X, Y)
#define MAP_BUTTON(X, Y) ButtonMapVirtualToName.Set(X, Y)


MAP_BUTTON(0, KEY_XboxTypeS_Back);					// Select
MAP_BUTTON(1, KEY_XboxTypeS_LeftThumbstick);		// L3
MAP_BUTTON(2, KEY_XboxTypeS_RightThumbstick);		// R3
MAP_BUTTON(3, KEY_XboxTypeS_Start);					// Start
MAP_BUTTON(4, KEY_XboxTypeS_DPad_Up);				// D-Up
MAP_BUTTON(5, KEY_XboxTypeS_DPad_Right);			// D-Right
MAP_BUTTON(6, KEY_XboxTypeS_DPad_Down);				// D-Down
MAP_BUTTON(7, KEY_XboxTypeS_DPad_Left);				// D-Left
MAP_BUTTON(8, KEY_XboxTypeS_LeftTrigger);			// L2
MAP_BUTTON(9, KEY_XboxTypeS_RightTrigger);			// R2
MAP_BUTTON(10, KEY_XboxTypeS_LeftShoulder);			// L1
MAP_BUTTON(11, KEY_XboxTypeS_RightShoulder);		// R1
MAP_BUTTON(12, KEY_XboxTypeS_Y);					// Triangle
MAP_BUTTON(13, KEY_XboxTypeS_B);					// Circle
MAP_BUTTON(14, KEY_XboxTypeS_A);					// X
MAP_BUTTON(15, KEY_XboxTypeS_X);					// Square


#if 1
MAP_KEY('\b', KEY_BackSpace);
MAP_KEY('\t', KEY_Tab);
MAP_KEY('\n', KEY_Enter);
MAP_KEY(CELL_KEYC_PAUSE | CELL_KB_RAWDAT, KEY_Pause); // NO IDEA

MAP_KEY(CELL_KEYC_CAPS_LOCK | CELL_KB_RAWDAT, KEY_CapsLock);
MAP_KEY(CELL_KEYC_ESCAPE | CELL_KB_RAWDAT, KEY_Escape); // @todo ps3: why are there two escape codes?
MAP_KEY(CELL_KEYC_ESC, KEY_Escape);
MAP_KEY(' ', KEY_SpaceBar);
MAP_KEY(CELL_KEYC_PAGE_UP | CELL_KB_RAWDAT, KEY_PageUp);
MAP_KEY(CELL_KEYC_PAGE_DOWN | CELL_KB_RAWDAT, KEY_PageDown);
MAP_KEY(CELL_KEYC_END | CELL_KB_RAWDAT, KEY_End);
MAP_KEY(CELL_KEYC_HOME | CELL_KB_RAWDAT, KEY_Home);

MAP_KEY(CELL_KEYC_LEFT_ARROW | CELL_KB_RAWDAT, KEY_Left);
MAP_KEY(CELL_KEYC_UP_ARROW | CELL_KB_RAWDAT, KEY_Up);
MAP_KEY(CELL_KEYC_RIGHT_ARROW | CELL_KB_RAWDAT, KEY_Right);
MAP_KEY(CELL_KEYC_DOWN_ARROW | CELL_KB_RAWDAT, KEY_Down);

MAP_KEY(CELL_KEYC_INSERT | CELL_KB_RAWDAT, KEY_Insert);
MAP_KEY(CELL_KEYC_DELETE | CELL_KB_RAWDAT, KEY_Delete);

MAP_KEY('0', KEY_Zero);		MAP_KEY(')', KEY_Zero);
MAP_KEY('1', KEY_One);		MAP_KEY('!', KEY_One);	
MAP_KEY('2', KEY_Two);		MAP_KEY('@', KEY_Two);	
MAP_KEY('3', KEY_Three);	MAP_KEY('#', KEY_Three);
MAP_KEY('4', KEY_Four);		MAP_KEY('$', KEY_Four);	
MAP_KEY('5', KEY_Five);		MAP_KEY('%', KEY_Five);	
MAP_KEY('6', KEY_Six);		MAP_KEY('^', KEY_Six);	
MAP_KEY('7', KEY_Seven);	MAP_KEY('&', KEY_Seven);
MAP_KEY('8', KEY_Eight);	MAP_KEY('*', KEY_Eight);
MAP_KEY('9', KEY_Nine);		MAP_KEY(')', KEY_Nine);	

MAP_KEY('a', KEY_A);		MAP_KEY('A', KEY_A);
MAP_KEY('b', KEY_B);		MAP_KEY('B', KEY_B);
MAP_KEY('c', KEY_C);		MAP_KEY('C', KEY_C);
MAP_KEY('d', KEY_D);		MAP_KEY('D', KEY_D);
MAP_KEY('e', KEY_E);		MAP_KEY('E', KEY_E);
MAP_KEY('f', KEY_F);		MAP_KEY('F', KEY_F);
MAP_KEY('g', KEY_G);		MAP_KEY('G', KEY_G);
MAP_KEY('h', KEY_H);		MAP_KEY('H', KEY_H);
MAP_KEY('i', KEY_I);		MAP_KEY('I', KEY_I);
MAP_KEY('j', KEY_J);		MAP_KEY('J', KEY_J);
MAP_KEY('k', KEY_K);		MAP_KEY('K', KEY_K);
MAP_KEY('l', KEY_L);		MAP_KEY('L', KEY_L);
MAP_KEY('m', KEY_M);		MAP_KEY('M', KEY_M);
MAP_KEY('n', KEY_N);		MAP_KEY('N', KEY_N);
MAP_KEY('o', KEY_O);		MAP_KEY('O', KEY_O);
MAP_KEY('p', KEY_P);		MAP_KEY('P', KEY_P);
MAP_KEY('q', KEY_Q);		MAP_KEY('Q', KEY_Q);
MAP_KEY('r', KEY_R);		MAP_KEY('R', KEY_R);
MAP_KEY('s', KEY_S);		MAP_KEY('S', KEY_S);
MAP_KEY('t', KEY_T);		MAP_KEY('T', KEY_T);
MAP_KEY('u', KEY_U);		MAP_KEY('U', KEY_U);
MAP_KEY('v', KEY_V);		MAP_KEY('V', KEY_V);
MAP_KEY('w', KEY_W);		MAP_KEY('W', KEY_W);
MAP_KEY('x', KEY_X);		MAP_KEY('X', KEY_X);
MAP_KEY('y', KEY_Y);		MAP_KEY('Y', KEY_Y);
MAP_KEY('z', KEY_Z);		MAP_KEY('Z', KEY_Z);

//!! remember to handle the char's specially
MAP_KEY('0' | CELL_KB_KEYPAD, KEY_NumPadZero);
MAP_KEY('1' | CELL_KB_KEYPAD, KEY_NumPadOne);
MAP_KEY('2' | CELL_KB_KEYPAD, KEY_NumPadTwo);
MAP_KEY('3' | CELL_KB_KEYPAD, KEY_NumPadThree);
MAP_KEY('4' | CELL_KB_KEYPAD, KEY_NumPadFour);
MAP_KEY('5' | CELL_KB_KEYPAD, KEY_NumPadFive);
MAP_KEY('6' | CELL_KB_KEYPAD, KEY_NumPadSix);
MAP_KEY('7' | CELL_KB_KEYPAD, KEY_NumPadSeven);
MAP_KEY('8' | CELL_KB_KEYPAD, KEY_NumPadEight);
MAP_KEY('9' | CELL_KB_KEYPAD, KEY_NumPadNine);

MAP_KEY('*' | CELL_KB_KEYPAD, KEY_Multiply);
MAP_KEY('+' | CELL_KB_KEYPAD, KEY_Add);
MAP_KEY('-' | CELL_KB_KEYPAD, KEY_Subtract);
MAP_KEY('.' | CELL_KB_KEYPAD, KEY_Decimal);
MAP_KEY('/' | CELL_KB_KEYPAD, KEY_Divide);

MAP_KEY(CELL_KEYC_F1 | CELL_KB_RAWDAT, KEY_F1);
MAP_KEY(CELL_KEYC_F2 | CELL_KB_RAWDAT, KEY_F2);
MAP_KEY(CELL_KEYC_F3 | CELL_KB_RAWDAT, KEY_F3);
MAP_KEY(CELL_KEYC_F4 | CELL_KB_RAWDAT, KEY_F4);
MAP_KEY(CELL_KEYC_F5 | CELL_KB_RAWDAT, KEY_F5);
MAP_KEY(CELL_KEYC_F6 | CELL_KB_RAWDAT, KEY_F6);
MAP_KEY(CELL_KEYC_F7 | CELL_KB_RAWDAT, KEY_F7);
MAP_KEY(CELL_KEYC_F8 | CELL_KB_RAWDAT, KEY_F8);
MAP_KEY(CELL_KEYC_F9 | CELL_KB_RAWDAT, KEY_F9);
MAP_KEY(CELL_KEYC_F10 | CELL_KB_RAWDAT, KEY_F10);
MAP_KEY(CELL_KEYC_F11 | CELL_KB_RAWDAT, KEY_F11);
MAP_KEY(CELL_KEYC_F12 | CELL_KB_RAWDAT, KEY_F12);

MAP_KEY(CELL_KEYC_NUM_LOCK | CELL_KB_RAWDAT, KEY_NumLock);
MAP_KEY(CELL_KEYC_SCROLL_LOCK | CELL_KB_RAWDAT, KEY_ScrollLock);

/*
MAP_KEY(VK_LSHIFT, KEY_LeftShift);
MAP_KEY(VK_RSHIFT, KEY_RightShift);
MAP_KEY(VK_LCONTROL, KEY_LeftControl);
MAP_KEY(VK_RCONTROL, KEY_RightControl);
MAP_KEY(VK_LMENU, KEY_LeftAlt);
MAP_KEY(VK_RMENU, KEY_RightAlt);
*/

MAP_KEY(';', KEY_Semicolon);			MAP_KEY(':', KEY_Semicolon);	
MAP_KEY('=', KEY_Equals);				MAP_KEY('+', KEY_Equals);
MAP_KEY(',', KEY_Comma);				MAP_KEY('<', KEY_Comma);
MAP_KEY('-', KEY_Underscore);			MAP_KEY('_', KEY_Underscore);
MAP_KEY('.', KEY_Period);				MAP_KEY('>', KEY_Period);
MAP_KEY('/', KEY_Slash);				MAP_KEY('?', KEY_Slash);
MAP_KEY('`', KEY_Tilde);				MAP_KEY('~', KEY_Tilde);
MAP_KEY('[', KEY_LeftBracket);			MAP_KEY('{', KEY_LeftBracket);
MAP_KEY('\\', KEY_Backslash);			MAP_KEY('|', KEY_Backslash);
MAP_KEY(']', KEY_RightBracket);			MAP_KEY('}', KEY_RightBracket);
MAP_KEY('\'', KEY_Quote);				MAP_KEY('\"', KEY_Quote);

#else
MAP_KEY(CELL_KEYC_BS, KEY_BackSpace);
MAP_KEY(CELL_KEYC_TAB, KEY_Tab);
MAP_KEY(CELL_KEYC_ENTER, KEY_Enter);
MAP_KEY(CELL_KEYC_PAUSE | CELL_KB_RAWDAT, KEY_Pause);

MAP_KEY(CELL_KEYC_CAPS_LOCK | CELL_KB_RAWDAT, KEY_CapsLock);
MAP_KEY(CELL_KEYC_ESCAPE | CELL_KB_RAWDAT, KEY_Escape); // @todo ps3: why are there two escape codes?
MAP_KEY(CELL_KEYC_ESC, KEY_Escape);
MAP_KEY(CELL_KEYC_SPACE, KEY_SpaceBar);
MAP_KEY(CELL_KEYC_PAGE_UP | CELL_KB_RAWDAT, KEY_PageUp);
MAP_KEY(CELL_KEYC_PAGE_DOWN | CELL_KB_RAWDAT, KEY_PageDown);
MAP_KEY(CELL_KEYC_END | CELL_KB_RAWDAT, KEY_End);
MAP_KEY(CELL_KEYC_HOME | CELL_KB_RAWDAT, KEY_Home);

MAP_KEY(CELL_KEYC_LEFT_ARROW | CELL_KB_RAWDAT, KEY_Left);
MAP_KEY(CELL_KEYC_UP_ARROW | CELL_KB_RAWDAT, KEY_Up);
MAP_KEY(CELL_KEYC_RIGHT_ARROW | CELL_KB_RAWDAT, KEY_Right);
MAP_KEY(CELL_KEYC_DOWN_ARROW | CELL_KB_RAWDAT, KEY_Down);

MAP_KEY(CELL_KEYC_INSERT | CELL_KB_RAWDAT, KEY_Insert);
MAP_KEY(CELL_KEYC_DELETE | CELL_KB_RAWDAT, KEY_Delete);

MAP_KEY(CELL_KEYC_0, KEY_Zero);
MAP_KEY(CELL_KEYC_1, KEY_One);
MAP_KEY(CELL_KEYC_2, KEY_Two);
MAP_KEY(CELL_KEYC_3, KEY_Three);
MAP_KEY(CELL_KEYC_4, KEY_Four);
MAP_KEY(CELL_KEYC_5, KEY_Five);
MAP_KEY(CELL_KEYC_6, KEY_Six);
MAP_KEY(CELL_KEYC_7, KEY_Seven);
MAP_KEY(CELL_KEYC_8, KEY_Eight);
MAP_KEY(CELL_KEYC_9, KEY_Nine);

MAP_KEY(CELL_KEYC_A, KEY_A);
MAP_KEY(CELL_KEYC_B, KEY_B);
MAP_KEY(CELL_KEYC_C, KEY_C);
MAP_KEY(CELL_KEYC_D, KEY_D);
MAP_KEY(CELL_KEYC_E, KEY_E);
MAP_KEY(CELL_KEYC_F, KEY_F);
MAP_KEY(CELL_KEYC_G, KEY_G);
MAP_KEY(CELL_KEYC_H, KEY_H);
MAP_KEY(CELL_KEYC_I, KEY_I);
MAP_KEY(CELL_KEYC_J, KEY_J);
MAP_KEY(CELL_KEYC_K, KEY_K);
MAP_KEY(CELL_KEYC_L, KEY_L);
MAP_KEY(CELL_KEYC_M, KEY_M);
MAP_KEY(CELL_KEYC_N, KEY_N);
MAP_KEY(CELL_KEYC_O, KEY_O);
MAP_KEY(CELL_KEYC_P, KEY_P);
MAP_KEY(CELL_KEYC_Q, KEY_Q);
MAP_KEY(CELL_KEYC_R, KEY_R);
MAP_KEY(CELL_KEYC_S, KEY_S);
MAP_KEY(CELL_KEYC_T, KEY_T);
MAP_KEY(CELL_KEYC_U, KEY_U);
MAP_KEY(CELL_KEYC_V, KEY_V);
MAP_KEY(CELL_KEYC_W, KEY_W);
MAP_KEY(CELL_KEYC_X, KEY_X);
MAP_KEY(CELL_KEYC_Y, KEY_Y);
MAP_KEY(CELL_KEYC_Z, KEY_Z);

MAP_KEY(CELL_KEYC_KPAD_0, KEY_NumPadZero);
MAP_KEY(CELL_KEYC_KPAD_1, KEY_NumPadOne);
MAP_KEY(CELL_KEYC_KPAD_2, KEY_NumPadTwo);
MAP_KEY(CELL_KEYC_KPAD_3, KEY_NumPadThree);
MAP_KEY(CELL_KEYC_KPAD_4, KEY_NumPadFour);
MAP_KEY(CELL_KEYC_KPAD_5, KEY_NumPadFive);
MAP_KEY(CELL_KEYC_KPAD_6, KEY_NumPadSix);
MAP_KEY(CELL_KEYC_KPAD_7, KEY_NumPadSeven);
MAP_KEY(CELL_KEYC_KPAD_8, KEY_NumPadEight);
MAP_KEY(CELL_KEYC_KPAD_9, KEY_NumPadNine);

MAP_KEY(CELL_KEYC_KPAD_ASTERISK, KEY_Multiply);
MAP_KEY(CELL_KEYC_KPAD_PLUS, KEY_Add);
MAP_KEY(CELL_KEYC_KPAD_MINUS, KEY_Subtract);
MAP_KEY(CELL_KEYC_KPAD_PERIOD, KEY_Decimal);
MAP_KEY(CELL_KEYC_KPAD_SLASH, KEY_Divide);

MAP_KEY(CELL_KEYC_F1 | CELL_KB_RAWDAT, KEY_F1);
MAP_KEY(CELL_KEYC_F2 | CELL_KB_RAWDAT, KEY_F2);
MAP_KEY(CELL_KEYC_F3 | CELL_KB_RAWDAT, KEY_F3);
MAP_KEY(CELL_KEYC_F4 | CELL_KB_RAWDAT, KEY_F4);
MAP_KEY(CELL_KEYC_F5 | CELL_KB_RAWDAT, KEY_F5);
MAP_KEY(CELL_KEYC_F6 | CELL_KB_RAWDAT, KEY_F6);
MAP_KEY(CELL_KEYC_F7 | CELL_KB_RAWDAT, KEY_F7);
MAP_KEY(CELL_KEYC_F8 | CELL_KB_RAWDAT, KEY_F8);
MAP_KEY(CELL_KEYC_F9 | CELL_KB_RAWDAT, KEY_F9);
MAP_KEY(CELL_KEYC_F10 | CELL_KB_RAWDAT, KEY_F10);
MAP_KEY(CELL_KEYC_F11 | CELL_KB_RAWDAT, KEY_F11);
MAP_KEY(CELL_KEYC_F12 | CELL_KB_RAWDAT, KEY_F12);

MAP_KEY(CELL_KEYC_NUM_LOCK | CELL_KB_RAWDAT, KEY_NumLock);
MAP_KEY(CELL_KEYC_SCROLL_LOCK | CELL_KB_RAWDAT, KEY_ScrollLock);

/*
MAP_KEY(VK_LSHIFT, KEY_LeftShift);
MAP_KEY(VK_RSHIFT, KEY_RightShift);
MAP_KEY(VK_LCONTROL, KEY_LeftControl);
MAP_KEY(VK_RCONTROL, KEY_RightControl);
MAP_KEY(VK_LMENU, KEY_LeftAlt);
MAP_KEY(VK_RMENU, KEY_RightAlt);
*/

MAP_KEY(CELL_KEYC_SEMICOLON, KEY_Semicolon);
MAP_KEY(CELL_KEYC_EQUAL_101, KEY_Equals);
MAP_KEY(CELL_KEYC_COMMA, KEY_Comma);
MAP_KEY(CELL_KEYC_MINUS, KEY_Underscore);
MAP_KEY(CELL_KEYC_PERIOD, KEY_Period);
MAP_KEY(CELL_KEYC_SLASH, KEY_Slash);
//MAP_KEY(VK_OEM_3, KEY_Tilde); // @todo ???
MAP_KEY(CELL_KEYC_LEFT_BRACKET_101, KEY_LeftBracket);
MAP_KEY(CELL_KEYC_BACKSLASH_101, KEY_Backslash);
MAP_KEY(CELL_KEYC_RIGHT_BRACKET_101, KEY_RightBracket);
MAP_KEY(CELL_KEYC_QUOTATION_101, KEY_Quote);
#endif

#undef MAP_KEY
#undef MAP_BUTTON

#endif

/*-----------------------------------------------------------------------------
	End.
-----------------------------------------------------------------------------*/
